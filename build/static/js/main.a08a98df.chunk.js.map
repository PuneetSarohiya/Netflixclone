{"version":3,"sources":["images/netflix.png","images/A5.png","components/Nav.js","axios.js","requests.js","animations/banner.js","components/Banner.js","animations/row.js","components/Row.js","components/Footer.js","pages/HomeScreen.js","firebase.js","images/google.png","pages/SignupScreen.js","animations/signupScreen.js","pages/SigninScreen.js","animations/loginScreen.js","pages/MainScreen.js","images/avatar.png","features/userSlice.js","animations/profileScreen.js","pages/ProfileScreen.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Nav","useState","show","handleShow","transitionNavbar","window","scrollY","history","useHistory","useEffect","addEventListener","removeEventListener","className","onClick","push","src","netflixLogo","alt","netflixAvatar","instance","axios","create","baseURL","API_KEY","requests","fetchNetflixOriginals","fetchNowPlaying","fetchTrending","fetchTopRated","fetchPopular","fetchUpcoming","fetchActionMovies","fetchComedyMovies","fetchRomanceMovies","fetchHorrorMovies","fetchDocumentaries","animationBanner","in","opacity","x","scale","out","transitionBanner","duration","animationOne","transitionOne","animationButton","transitionButton","animationTwo","transitionTwo","Banner","str","n","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","motion","header","initial","animate","variants","transition","style","backgroundSize","backgroundRepeat","backgroundImage","backdrop_path","backgroundPosition","h1","title","name","original_name","div","overview","substr","animationTitle","transitionTitle","animationPosters","transitionPosters","Row","fetchUrl","isLargeRow","movies","setMovies","pathname","useLocation","trailerUrl","setTrailerUrl","h2","map","class","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","loading","poster_path","id","original_title","date","release_date","first_air_date","Date","getFullYear","line","element","containerClassName","truncateText","text","tagline","Rating","value","vote_average","precision","icon","fontSize","readOnly","numeral","format","videoId","opts","height","width","playerVars","autoplay","Footer","year","Language","ArrowDropDown","HomeScreen","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","GoogleAuthProvider","SignupScreen","emailRef","useRef","passwordRef","signInWithGoogleHandler","signInWithPopup","signInedUser","ref","type","placeholder","e","preventDefault","createUserWithEmailAndPassword","current","authUser","alert","message","googleLogo","formAnimation","formTransition","SigninScreen","signUp","setSignUp","exit","signInWithEmailAndPassword","loginscreenAnimation","loginscreenTransition","y","animationThree","transitionThree","animationFour","transitionFour","animationLogo","transitionLogo","MainScreen","signIn","setSignIn","img","netflix","button","h3","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","animationAvatar","transitionAvatar","animationEmail","transitionEmail","ProfileScreen","useSelector","avatar","email","toLocaleDateString","signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","uid","AnimatePresence","path","exact","configureStore","reducer","userReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a08a98df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/netflix.4d191bfb.png\";","export default __webpack_public_path__ + \"static/media/A5.750cb968.png\";","import React, { useEffect, useState } from 'react';\nimport netflixLogo from '../images/netflix.png';\nimport netflixAvatar from '../images/A5.png';\nimport './Nav.css';\nimport { useHistory } from 'react-router-dom';\n\n\nconst Nav = () => {\n  const [show, handleShow] = useState(false);\n  const transitionNavbar = () => {\n    if (window.scrollY > 80) {\n      handleShow(true);\n    } else handleShow(false);\n  };\n  const history = useHistory();\n\n  useEffect(() => {\n    window.addEventListener('scroll', transitionNavbar);\n    return () => {\n      window.removeEventListener('scroll', transitionNavbar);\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && 'nav_black'}`}>\n      <img\n        onClick={() => history.push('/')}\n        className='nav_logo'\n        src={netflixLogo}\n        alt='Logo'\n      />\n\n      <img\n        onClick={() => history.push('/profile')}\n        className='nav_avatar'\n        src={netflixAvatar}\n        alt='Profile'\n      />\n    </div>\n  );\n};\n\nexport default Nav;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport default instance;\n","const API_KEY = 'fc822deccc28a63274b6b3483f95401e';\n\nconst requests = {\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&language=en-US`,\n  fetchNowPlaying: `/now_playing/movie/day?api_key=${API_KEY}`,\n  fetchTrending: `/trending/movie/day?api_key=${API_KEY}`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchPopular: `/movie/popular?api_key=${API_KEY}&language=en-US`,\n  fetchUpcoming: `/movie/upcoming?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n","export const animationBanner = {\n  in: {\n    opacity: 1,\n    x: 0,\n    scale: 1,\n  },\n  out: {\n    opacity: -2,\n    scale: 0.5,\n    x: 100,\n  },\n};\nexport const transitionBanner = {\n  duration: 1,\n};\n\nexport const animationOne = {\n  in: {\n    opacity: 1,\n    x: 0,\n    // scale: 1,\n  },\n  out: {\n    opacity: -2,\n    // scale: 0.5,\n    x: 100,\n  },\n};\nexport const transitionOne = {\n  duration: 1.8,\n};\n\nexport const animationButton = {\n  in: {\n    opacity: 1,\n    // x: 0,\n    scale: 1,\n  },\n  out: {\n    opacity: -2,\n    scale: 0.5,\n    // x: 100,\n  },\n};\nexport const transitionButton = {\n  duration: 2,\n};\n\nexport const animationTwo = {\n  in: {\n    opacity: 1,\n    x: 0,\n    // scale: 1,\n  },\n  out: {\n    opacity: -2,\n    // scale: 0.5,\n    x: 100,\n  },\n};\nexport const transitionTwo = {\n  duration: 2.4,\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport requests from '../requests';\nimport './Banner.css';\nimport { motion } from 'framer-motion';\nimport {\n  animationOne,\n  transitionOne,\n  animationTwo,\n  transitionTwo,\n  animationBanner,\n  transitionBanner,\n  animationButton,\n  transitionButton,\n} from '../animations/banner';\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + '...' : str;\n  }\n\n  return (\n    <motion.header\n      initial='out'\n      animate='in'\n      variants={animationBanner}\n      transition={transitionBanner}\n      className='banner'\n      style={{\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)),url(\n          'https://image.tmdb.org/t/p/original/${movie?.backdrop_path}'\n          )`,\n        backgroundPosition: 'center center',\n      }}\n    >\n      <div className='banner_contents'>\n        <motion.h1\n          initial='out'\n          animate='in'\n          variants={animationOne}\n          transition={transitionOne}\n          className='banner_title'\n        >\n          {movie?.title || movie?.name || movie?.original_name}{' '}\n        </motion.h1>\n\n        <motion.div\n          initial='out'\n          animate='in'\n          variants={animationButton}\n          transition={transitionButton}\n          className='banner_buttons'\n        >\n          {/* <button className='banner_button'>Play</button>\n          <button className='banner_button'>My List</button> */}\n        </motion.div>\n\n        <motion.h1\n          initial='out'\n          animate='in'\n          variants={animationTwo}\n          transition={transitionTwo}\n          className='banner_description'\n        >\n          {truncate(movie?.overview, 150)}{' '}\n        </motion.h1>\n      </div>\n      <div className='banner_fadeBottom' />\n    </motion.header>\n  );\n}\n\nexport default Banner;\n","export const animationTitle = {\n  in: {\n    opacity: 1,\n    // x: 0,\n    scale: 1,\n  },\n  out: {\n    opacity: -2,\n    scale: 0.3,\n    // x: 100,\n  },\n};\nexport const transitionTitle = {\n  duration: 2.8,\n};\n\nexport const animationPosters = {\n  in: {\n    opacity: 1,\n    // x: 0,\n    scale: 1,\n  },\n  out: {\n    opacity: -2,\n    scale: 0.3,\n    // x: 100,\n  },\n};\nexport const transitionPosters = {\n  duration: 2.8,\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport './Row.css';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nimport { motion } from 'framer-motion';\nimport {\n  animationTitle,\n  transitionTitle,\n  animationPosters,\n  transitionPosters,\n} from '../animations/row';\nimport { useLocation } from \"react-router-dom\";\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport TextTruncate from \"react-text-truncate\";\nimport numeral from \"numeral\";\n\nconst base_url = 'https://image.tmdb.org/t/p/original/';\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const { pathname } = useLocation();\n  const [trailerUrl, setTrailerUrl] = useState('');\n\n  const getReleaseYear = (date) => {\n    let year = new Date(date);\n    return year.getFullYear(pathname);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const opts = {\n    height: '350',\n    width: '740',\n    playerVars: {\n      autoplay: 2,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer(movie?.title || movie?.original_name || '')\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get('v'));\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div className='row'>\n      <motion.h2\n        initial='out'\n        animate='in'\n        variants={animationTitle}\n        transition={transitionTitle}\n      >\n        {title}\n      </motion.h2>\n\n      <motion.div\n        initial='out'\n        animate='in'\n        variants={animationPosters}\n        transition={transitionPosters}\n        className='row_posters'\n      >\n       \n      <div className=\"row__posters list__items\" >\n        {movies.map((movie) => (\n          <div class=\"list__item\" onClick={() => handleClick(movie)}>\n            <img\n              loading=\"lazy\"\n              key={movie.id}\n              className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n              src={`${base_url}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            />\n            <div className=\"list__itemInfo\">\n              <h5 className=\"list__itemTitle\">\n                {movie.name || movie.original_title}\n                <span className=\"list__itemYear\">\n                  ({getReleaseYear(movie.release_date || movie.first_air_date)})\n                </span>\n              </h5>\n              <TextTruncate\n                line={2}\n                element=\"p\"\n                containerClassName=\"list__itemOverview\"\n                truncateText=\"…\"\n                text={movie.tagline || movie.overview}\n              />\n              <div className=\"list__rating\">\n                <Rating\n                  name=\"movie-rating\"\n                  className=\"movieRating\"\n                  value={movie.vote_average / 2 || 0}\n                  precision={0.5}\n                  icon={<StarRoundedIcon fontSize=\"inherit\" readOnly />}\n                />\n                <small className=\"list__likes\">\n                  {numeral(movie.vote_average / 2).format(\"0.0\")}\n                </small>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      </motion.div>\n      <div className=\"trailer\">\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n      </div>\n    </div>\n  );\n}\n\nexport default Row;\n","import React from 'react';\nimport './Footer.css';\nimport { ArrowDropDown, Language } from '@material-ui/icons';\n\nconst Footer = () => {\n  const year = new Date().getFullYear();\n  console.log(year);\n  return (\n    <div className='footer'>\n      <div className='footer_contact'>Questions? Contact Us</div>\n      <div className='footer_container'>\n        <div>\n          <p>FAQ</p>\n          <p>Investor Relations</p>\n          <p>Privacy</p>\n          <p>Speed Test</p>\n        </div>\n        <div>\n          <p>Help Center</p>\n          <p>Jobs</p>\n          <p>Cookie Preferences</p>\n          <p>Legal Notices</p>\n        </div>\n        <div>\n          <p>Account</p>\n          <p>Ways to Watch</p>\n          <p>Corporate Informatioon</p>\n          <p>Netflix Originals</p>\n        </div>\n        <div>\n          <p>Media Center</p>\n          <p>Terms of Use</p>\n          <p>Contact Us</p>\n        </div>\n      </div>\n      <div className='footer_language'>\n        <button className='footer_button'>\n          <Language /> <span>English</span> <ArrowDropDown />\n        </button>\n      </div>\n      <div className='footer_country'>Netflix Kenya</div>\n      <div className='footer_author'>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './HomeScreen.css';\nimport Nav from '../components/Nav';\nimport Banner from '../components/Banner';\nimport Row from '../components/Row';\nimport requests from '../requests';\nimport Footer from '../components/Footer';\n\nconst HomeScreen = () => {\n  return (\n    <div className='homescreen'>\n      <Nav />\n      <Banner />\n      <Row\n        title='Netflix Originals'\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title='Trending' fetchUrl={requests.fetchTrending} />\n      <Row title='Popular' fetchUrl={requests.fetchPopular} />\n      <Row title='Top Rated' fetchUrl={requests.fetchTopRated} />\n      <Row title='Upcoming' fetchUrl={requests.fetchUpcoming} />\n      <Row title='Action' fetchUrl={requests.fetchActionMovies} />\n      <Row title='Comedy' fetchUrl={requests.fetchComedyMovies} />\n      <Row title='Horror' fetchUrl={requests.fetchHorrorMovies} />\n      <Row title='Romance' fetchUrl={requests.fetchRomanceMovies} />\n      <Row title='Documentaries' fetchUrl={requests.fetchDocumentaries} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import firebase from 'firebase';\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAVmTDojXvCt-UjfSdQ_-P1w25i0wlBsCw\",\n  authDomain: \"netflix-clone-8292.firebaseapp.com\",\n  projectId: \"netflix-clone-8292\",\n  storageBucket: \"netflix-clone-8292.appspot.com\",\n  messagingSenderId: \"645155675927\",\n  appId: \"1:645155675927:web:44b6affe438077a15b6152\",\n  measurementId: \"G-SYKNRWP8RL\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth,provider };\nexport default db;\n","export default __webpack_public_path__ + \"static/media/google.4acea2d5.png\";","import React, { useRef } from 'react';\nimport { auth,provider } from '../firebase';\nimport './SignupScreen.css';\nimport googleLogo from \"../images/google.png\";\n\nconst SignupScreen = () => {\n  //const firstnameRef = useRef(null);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  const register = (e) => {\n    e.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(\n        emailRef.current.value,\n        passwordRef.current.value,\n      \n      )\n      .then((authUser) => {\n        // console.log(authUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  const signInWithGoogleHandler = () => {\n\t\tauth\n\t\t\t.signInWithPopup(provider)\n\t\t\t.then((signInedUser) => {\n\t\t\t\t// signIn successful.\n\t\t\t\t// console.log(signInedUser);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// An error happened.\n\t\t\t\t// console.log(error);\n\t\t\t});\n\t};\n  return (\n    <div className='signupScreen'>\n      <form>\n        <h1>Sign Up</h1>\n      \n        <input ref={emailRef} type='email' placeholder='Email' />\n        <input ref={passwordRef} type='password' placeholder='Password' />\n        <button type='submit' onClick={register}>\n          Sign Up\n        </button>\n       \n      </form>\n      <div className='signupScreen_withGoogle'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tonClick={signInWithGoogleHandler}\n\t\t\t\t\t\tsrc={googleLogo}\n\t\t\t\t\t\talt='Logo'\n\t\t\t\t\t/>\n\t\t\t\t\t<h5 onClick={signInWithGoogleHandler}>Login With Google</h5>\n\t\t\t\t</div>\n    </div>\n  );\n};\n\nexport default SignupScreen;\n","export const formAnimation = {\n  in: {\n    opacity: 1,\n    scale: 1,\n  },\n  out: {\n    opacity: 0,\n    scale: 0.3,\n  },\n};\n\nexport const formTransition = {\n  duration: 1.5,\n};\n","import React, { useRef, useState } from 'react';\nimport SignupScreen from './SignupScreen';\nimport { auth,provider } from '../firebase';\nimport './SigninScreen.css';\nimport googleLogo from \"../images/google.png\";\n\nimport { motion } from 'framer-motion';\nimport { formAnimation, formTransition } from '../animations/signupScreen';\n\nconst SigninScreen = () => {\n  const [signUp, setSignUp] = useState(false);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  const signIn = (e) => {\n    e.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(\n        emailRef.current.value,\n        passwordRef.current.value\n      )\n      .then((authUser) => {\n        // console.log(authUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n  \n  const signInWithGoogleHandler = () => {\n\t\tauth\n\t\t\t.signInWithPopup(provider)\n\t\t\t.then((signInedUser) => {\n\t\t\t\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\n\t\t\t});\n\t};\n\n\n  return (\n    <>\n      {signUp ? (\n        <SignupScreen />\n      ) : (\n        <motion.div\n          className='signinScreen'\n          initial='out'\n          animate='in'\n          exit='out'\n          variants={formAnimation}\n          transition={formTransition}\n        >\n          <form>\n            <h1>Sign In</h1>\n            <input ref={emailRef} type='email' placeholder='Email' />\n            <input ref={passwordRef} type='password' placeholder='Password' />\n            <button type='submit' onClick={signIn}>\n              Sign In\n            </button>\n            <h4>\n      \n              <span className='signinScreen_gray'>New to Netflix?</span>{' '}\n              <span\n                className='signinScreen_link'\n                onClick={() => setSignUp(true)}\n              >\n                Sign Up now.\n              </span>\n            </h4>\n          </form>\n          <div className='signupScreen_withGoogle'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tonClick={signInWithGoogleHandler}\n\t\t\t\t\t\tsrc={googleLogo}\n\t\t\t\t\t\talt='Logo'\n\t\t\t\t\t/>\n\t\t\t\t\t<h5 onClick={signInWithGoogleHandler}>Login With Google</h5>\n\t\t\t\t</div>\n        \n        </motion.div>\n      )}\n    </>\n  );\n};\n\nexport default SigninScreen;\n\n","export const loginscreenAnimation = {\n  in: {\n    opacity: 1,\n  },\n  out: {\n    opacity: 0,\n  },\n};\nexport const loginscreenTransition = {\n  duration: 0.4,\n};\n\nexport const animationOne = {\n  in: {\n    opacity: 1,\n    y: 0,\n    // scale: 1,\n  },\n  out: {\n    opacity: -2,\n    // scale: 0.5,\n    y: -100,\n  },\n};\nexport const transitionOne = {\n  duration: 1,\n};\n\nexport const animationTwo = {\n  in: {\n    opacity: 1,\n    x: 0,\n    // scale: 1,\n  },\n  out: {\n    opacity: -2,\n    // scale: 0.5,\n    x: -100,\n  },\n};\nexport const transitionTwo = {\n  duration: 1.4,\n};\n\nexport const animationThree = {\n  in: {\n    opacity: 1,\n    x: 0,\n    // scale: 1,\n  },\n  out: {\n    opacity: -2,\n    // scale: 0.5,\n    x: 100,\n  },\n};\nexport const transitionThree = {\n  duration: 1.8,\n};\n\nexport const animationFour = {\n  in: {\n    opacity: 1,\n    y: 0,\n    // scale: 1,\n  },\n  out: {\n    opacity: -2,\n    // scale: 0.5,\n    y: 100,\n  },\n};\nexport const transitionFour = {\n  duration: 2.2,\n};\n\nexport const animationLogo = {\n  in: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n  },\n  out: {\n    opacity: -2,\n    scale: 0.5,\n    y: 100,\n  },\n};\nexport const transitionLogo = {\n  duration: 0.5,\n};\n\nexport const animationButton = {\n  in: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n  },\n  out: {\n    opacity: -2,\n    scale: 0.5,\n    y: 100,\n  },\n};\nexport const transitionButton = {\n  duration: 0.5,\n};\n","import React, { useState } from 'react';\nimport netflix from '../images/netflix.png';\nimport SigninScreen from './SigninScreen';\nimport './MainScreen.css';\nimport { motion } from 'framer-motion';\nimport {\n  loginscreenAnimation,\n  loginscreenTransition,\n  animationOne,\n  transitionOne,\n  animationTwo,\n  transitionTwo,\n  animationThree,\n  transitionThree,\n  animationFour,\n  transitionFour,\n  animationLogo,\n  transitionLogo,\n  animationButton,\n  transitionButton,\n} from '../animations/loginScreen';\n\nconst MainScreen = () => {\n  const [signIn, setSignIn] = useState(false);\n\n  return (\n    <motion.div\n      initial='out'\n      animate='in'\n      variants={loginscreenAnimation}\n      transition={loginscreenTransition}\n      className='mainScreen'\n    >\n      <div className='mainScreen_background'>\n        <motion.img\n          initial='out'\n          animate='in'\n          variants={animationLogo}\n          transition={transitionLogo}\n          className='mainScreen_logo'\n          src={netflix}\n          alt='login'\n        />\n        <motion.button\n          initial='out'\n          animate='in'\n          variants={animationButton}\n          transition={transitionButton}\n          className='mainScreen_button'\n          onClick={() => setSignIn(true)}\n        >\n          Sign In\n        </motion.button>\n        <div className='mainScreen_gradient' />\n      </div>\n      <div className='mainScreen_body'>\n        {signIn ? (\n          <SigninScreen />\n        ) : (\n          <>\n            <motion.h1\n              initial='out'\n              animate='in'\n              variants={animationOne}\n              transition={transitionOne}\n            >\n              Unlimited films, TV Shows, Programmes and more.\n            </motion.h1>\n            <motion.h2\n              initial='out'\n              animate='in'\n              variants={animationTwo}\n              transition={transitionTwo}\n            >\n              Watch anywhere. Cancel anytime\n            </motion.h2>\n            <motion.h3\n              initial='out'\n              animate='in'\n              variants={animationThree}\n              transition={transitionThree}\n            >\n              Ready to watch? Enter your email to create or restart your\n              membership.\n            </motion.h3>\n            <motion.div\n              initial='out'\n              animate='in'\n              variants={animationFour}\n              transition={transitionFour}\n              className='mainScreen_input'\n            >\n              <form>\n                <input type='email' placeholder='Email Address' />\n                <button\n                  className='mainScreen_getStarted'\n                  onClick={() => setSignIn(true)}\n                >\n                  GET STARTED\n                </button>\n              </form>\n            </motion.div>\n          </>\n        )}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default MainScreen;\n","export default __webpack_public_path__ + \"static/media/avatar.120f4de6.png\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","export const animationOne = {\n  in: {\n    opacity: 1,\n    y: 0,\n    // scale: 1,\n  },\n  out: {\n    opacity: -2,\n    // scale: 0.5,\n    y: -100,\n  },\n};\nexport const transitionOne = {\n  duration: 1,\n};\n\nexport const animationAvatar = {\n  in: {\n    opacity: 1,\n    y: 0,\n    // scale: 1,\n  },\n  out: {\n    opacity: -1,\n    // scale: 0.5,\n    y: -100,\n  },\n};\nexport const transitionAvatar = {\n  duration: 1.4,\n};\n\nexport const animationEmail = {\n  in: {\n    opacity: 1,\n    // y: 0,\n    // scale: 1,\n  },\n  out: {\n    opacity: -2,\n    // scale: 0.5,\n    // y: -100,\n  },\n};\nexport const transitionEmail = {\n  duration: 1.8,\n};\n\nexport const animationPlans = {\n  in: {\n    opacity: 1,\n    // y: 0,\n    // scale: 1,\n  },\n  out: {\n    opacity: -2,\n    // scale: 0.5,\n    // y: -100,\n  },\n};\nexport const transitionPlans = {\n  duration: 1.8,\n};\n\nexport const animationButton = {\n  in: {\n    opacity: 1,\n    // y: 0,\n    scale: 1,\n  },\n  out: {\n    opacity: -2,\n    scale: 0.2,\n    // y: -100,\n  },\n};\nexport const transitionButton = {\n  duration: 2.2,\n};\n","\nimport React from 'react';\nimport Nav from '../components/Nav';\nimport './ProfileScreen.css';\nimport avatar from '../images/avatar.png';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/userSlice';\nimport { auth } from '../firebase';\nimport { motion } from 'framer-motion';\nimport {\n  animationOne,\n  transitionOne,\n\n  animationAvatar,\n  transitionAvatar,\n  animationEmail,\n  transitionEmail,\n\n} from '../animations/profileScreen';\n\n\nconst ProfileScreen = () => {\n  const user = useSelector(selectUser);\n\n  return (\n    <div className='profileScreen'>\n      <Nav />\n      <div className='profileScreen_body'>\n        <motion.h1\n          initial='out'\n          animate='in'\n          variants={animationOne}\n          transition={transitionOne}\n        >\n          Edit Profile\n        </motion.h1>\n        <div className='profileScreen_info'>\n          <motion.img\n            initial='out'\n            animate='in'\n            variants={animationAvatar}\n            transition={transitionAvatar}\n            src={avatar}\n            alt='avatar'\n          />\n          <div className='profileScreen_details'>\n            <motion.h2\n              initial='out'\n              animate='in'\n              variants={animationEmail}\n              transition={transitionEmail}\n            >\n              {user.email}\n            </motion.h2>\n            <div className='profileScreen_plans'>\n            <div className=\"profileScreen__plans\">\n                            <h3>Plans</h3>\n                       <p>\n                    Current date: {\" \"} \n                    {new Date().toLocaleDateString()}\n                </p> \n                            <div className=\"profileScreen__plan\">\n                                <h3>Mobile ( 480P )</h3>\n                             <button className='button'>Subscribe</button>\n                                \n                            </div>\n                            <div className=\"profileScreen__plan\">\n                                <h3>Basic ( 720P )</h3>\n                                <button className='button'>Subscribe</button>\n                                 \n                            </div>\n                            <div className=\"profileScreen__plan\">\n                                <h3>Standard ( 1080P )</h3>\n                                <button className='button'>Subscribe</button>\n                                \n                                 \n                            </div>\n                            <div className=\"profileScreen__plan\">\n                                <h3>Premium ( 4k + HDR )</h3>\n                                <button className='button'>Subscribe</button>\n                                \n                                \n  </div>\n                            <button \n                            onClick={() => auth.signOut()}\n  className='profileScreen__signOut'>Sign Out</button>\n                        </div> \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport HomeScreen from './pages/HomeScreen';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport MainScreen from './pages/MainScreen';\r\nimport ProfileScreen from './pages/ProfileScreen';\r\nimport { auth } from './firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login, logout, selectUser } from './features/userSlice';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(\r\n          login({\r\n            uid: userAuth.uid,\r\n            email: userAuth.email,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n    return unsubscribe;\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Router>\r\n        <AnimatePresence>\r\n          {!user ? (\r\n            <MainScreen />\r\n          ) : (\r\n            <Switch>\r\n              <Route path='/profile'>\r\n                <ProfileScreen />\r\n              </Route>\r\n              <Route exact path='/'>\r\n                <HomeScreen />\r\n              </Route>\r\n            </Switch>\r\n          )}\r\n        </AnimatePresence>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}